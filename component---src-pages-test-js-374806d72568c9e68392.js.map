{"version":3,"file":"component---src-pages-test-js-374806d72568c9e68392.js","mappings":"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","sources":["webpack://saikiacodes-portfolio/./node_modules/css-mediaquery/index.js","webpack://saikiacodes-portfolio/./src/pages/test.js","webpack://saikiacodes-portfolio/./node_modules/matchmediaquery/index.js","webpack://saikiacodes-portfolio/./node_modules/hyphenate-style-name/index.js","webpack://saikiacodes-portfolio/./node_modules/shallow-equal/dist/index.modern.mjs","webpack://saikiacodes-portfolio/./node_modules/react-responsive/dist/esm/index.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","import React from \"react\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\n\r\nconst MobileComponent = () => <div>Mobile View</div>\r\nconst DesktopComponent = () => <div>Desktop View</div>\r\n\r\nconst ResponsiveComponent = () => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 }) // Mobile: width <= 767px\r\n\r\n  return <div>{isMobile ? <MobileComponent /> : <DesktopComponent />}</div>\r\n}\r\n\r\nexport default ResponsiveComponent\r\n\r\n// works fine...\r\n","'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  var mql;\n\n  // matchMedia will return null in FF when it's called in a hidden iframe\n  // ref: https://stackoverflow.com/a/12330568\n  if(dynamicMatch && !forceStatic) mql = dynamicMatch.call(window, query);\n\n  if (mql) {\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","function shallowEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n  if (!arrA || !arrB) {\n    return false;\n  }\n  const len = arrA.length;\n  if (arrB.length !== len) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n  if (bKeys.length !== len) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction shallowEqual(a, b) {\n  const aIsArr = Array.isArray(a);\n  const bIsArr = Array.isArray(b);\n  if (aIsArr !== bIsArr) {\n    return false;\n  }\n  if (aIsArr && bIsArr) {\n    return shallowEqualArrays(a, b);\n  }\n  return shallowEqualObjects(a, b);\n}\n\nexport { shallowEqual, shallowEqualArrays, shallowEqualObjects };\n//# sourceMappingURL=index.modern.mjs.map\n","import { createContext, useRef, useEffect, useContext, useState } from 'react';\nimport matchMedia from 'matchmediaquery';\nimport hyphenate from 'hyphenate-style-name';\nimport { shallowEqualObjects } from 'shallow-equal';\nimport PropTypes from 'prop-types';\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n// media types\nconst types = {\n    all: PropTypes.bool,\n    grid: PropTypes.bool,\n    aural: PropTypes.bool,\n    braille: PropTypes.bool,\n    handheld: PropTypes.bool,\n    print: PropTypes.bool,\n    projection: PropTypes.bool,\n    screen: PropTypes.bool,\n    tty: PropTypes.bool,\n    tv: PropTypes.bool,\n    embossed: PropTypes.bool\n};\n// properties that match media queries\nconst matchers = {\n    orientation: PropTypes.oneOf(['portrait', 'landscape']),\n    scan: PropTypes.oneOf(['progressive', 'interlace']),\n    aspectRatio: PropTypes.string,\n    deviceAspectRatio: PropTypes.string,\n    height: stringOrNumber,\n    deviceHeight: stringOrNumber,\n    width: stringOrNumber,\n    deviceWidth: stringOrNumber,\n    color: PropTypes.bool,\n    colorIndex: PropTypes.bool,\n    monochrome: PropTypes.bool,\n    resolution: stringOrNumber,\n    type: Object.keys(types)\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers;\n// media features\nconst features = {\n    minAspectRatio: PropTypes.string,\n    maxAspectRatio: PropTypes.string,\n    minDeviceAspectRatio: PropTypes.string,\n    maxDeviceAspectRatio: PropTypes.string,\n    minHeight: stringOrNumber,\n    maxHeight: stringOrNumber,\n    minDeviceHeight: stringOrNumber,\n    maxDeviceHeight: stringOrNumber,\n    minWidth: stringOrNumber,\n    maxWidth: stringOrNumber,\n    minDeviceWidth: stringOrNumber,\n    maxDeviceWidth: stringOrNumber,\n    minColor: PropTypes.number,\n    maxColor: PropTypes.number,\n    minColorIndex: PropTypes.number,\n    maxColorIndex: PropTypes.number,\n    minMonochrome: PropTypes.number,\n    maxMonochrome: PropTypes.number,\n    minResolution: stringOrNumber,\n    maxResolution: stringOrNumber,\n    ...featureMatchers\n};\nconst all = { ...types, ...features };\nvar mq = {\n    all: all,\n    types: types,\n    matchers: matchers,\n    features: features\n};\n\nconst negate = (cond) => `not ${cond}`;\nconst keyVal = (k, v) => {\n    const realKey = hyphenate(k);\n    // px shorthand\n    if (typeof v === 'number') {\n        v = `${v}px`;\n    }\n    if (v === true) {\n        return realKey;\n    }\n    if (v === false) {\n        return negate(realKey);\n    }\n    return `(${realKey}: ${v})`;\n};\nconst join = (conds) => conds.join(' and ');\nconst toQuery = (obj) => {\n    const rules = [];\n    Object.keys(mq.all).forEach((k) => {\n        const v = obj[k];\n        if (v != null) {\n            rules.push(keyVal(k, v));\n        }\n    });\n    return join(rules);\n};\n\nconst Context = createContext(undefined);\n\nconst makeQuery = (settings) => settings.query || toQuery(settings);\nconst hyphenateKeys = (obj) => {\n    if (!obj)\n        return undefined;\n    const keys = Object.keys(obj);\n    return keys.reduce((result, key) => {\n        result[hyphenate(key)] = obj[key];\n        return result;\n    }, {});\n};\nconst useIsUpdate = () => {\n    const ref = useRef(false);\n    useEffect(() => {\n        ref.current = true;\n    }, []);\n    return ref.current;\n};\nconst useDevice = (deviceFromProps) => {\n    const deviceFromContext = useContext(Context);\n    const getDevice = () => hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext);\n    const [device, setDevice] = useState(getDevice);\n    useEffect(() => {\n        const newDevice = getDevice();\n        if (!shallowEqualObjects(device, newDevice)) {\n            setDevice(newDevice);\n        }\n    }, [deviceFromProps, deviceFromContext]);\n    return device;\n};\nconst useQuery = (settings) => {\n    const getQuery = () => makeQuery(settings);\n    const [query, setQuery] = useState(getQuery);\n    useEffect(() => {\n        const newQuery = getQuery();\n        if (query !== newQuery) {\n            setQuery(newQuery);\n        }\n    }, [settings]);\n    return query;\n};\nconst useMatchMedia = (query, device) => {\n    const getMatchMedia = () => matchMedia(query, device || {}, !!device);\n    const [mq, setMq] = useState(getMatchMedia);\n    const isUpdate = useIsUpdate();\n    useEffect(() => {\n        if (isUpdate) {\n            // skip on mounting, it has already been set\n            const newMq = getMatchMedia();\n            setMq(newMq);\n            return () => {\n                if (newMq) {\n                    newMq.dispose();\n                }\n            };\n        }\n    }, [query, device]);\n    return mq;\n};\nconst useMatches = (mediaQuery) => {\n    const [matches, setMatches] = useState(mediaQuery.matches);\n    useEffect(() => {\n        const updateMatches = (ev) => {\n            setMatches(ev.matches);\n        };\n        mediaQuery.addListener(updateMatches);\n        setMatches(mediaQuery.matches);\n        return () => {\n            mediaQuery.removeListener(updateMatches);\n        };\n    }, [mediaQuery]);\n    return matches;\n};\nconst useMediaQuery = (settings, device, onChange) => {\n    const deviceSettings = useDevice(device);\n    const query = useQuery(settings);\n    if (!query)\n        throw new Error('Invalid or missing MediaQuery!');\n    const mq = useMatchMedia(query, deviceSettings);\n    const matches = useMatches(mq);\n    const isUpdate = useIsUpdate();\n    useEffect(() => {\n        if (isUpdate && onChange) {\n            onChange(matches);\n        }\n    }, [matches]);\n    useEffect(() => () => {\n        if (mq) {\n            mq.dispose();\n        }\n    }, []);\n    return matches;\n};\n\n// ReactNode and ReactElement typings are a little funky for functional components, so the ReactElement cast is needed on the return\nconst MediaQuery = ({ children, device, onChange, ...settings }) => {\n    const matches = useMediaQuery(settings, device, onChange);\n    if (typeof children === 'function') {\n        return children(matches);\n    }\n    return matches ? children : null;\n};\n\nexport { Context, MediaQuery as default, toQuery, useMediaQuery };\n//# sourceMappingURL=index.js.map\n"],"names":["exports","mediaQuery","values","parseQuery","some","query","inverse","typeMatch","type","expressionsMatch","expressions","every","expression","feature","modifier","expValue","value","toLowerCase","toPx","toDpi","toDecimal","parseInt","RE_MEDIA_QUERY","RE_MQ_EXPRESSION","RE_MQ_FEATURE","RE_LENGTH_UNIT","RE_RESOLUTION_UNIT","split","map","captures","trim","match","parsed","ratio","numbers","decimal","Number","resolution","parseFloat","String","length","MobileComponent","React","DesktopComponent","ResponsiveComponent","isMobile","useMediaQuery","maxWidth","staticMatch","dynamicMatch","window","matchMedia","Mql","forceStatic","mql","self","this","update","evt","matches","media","call","addListener","listener","removeListener","dispose","module","uppercasePattern","msPattern","cache","toHyphenLower","name","hasOwnProperty","hName","replace","test","shallowEqualObjects","objA","objB","aKeys","Object","keys","bKeys","len","i","key","prototype","stringOrNumber","types","all","grid","aural","braille","handheld","print","projection","screen","tty","tv","embossed","matchers","orientation","scan","aspectRatio","deviceAspectRatio","height","deviceHeight","width","deviceWidth","color","colorIndex","monochrome","featureMatchers","features","minAspectRatio","maxAspectRatio","minDeviceAspectRatio","maxDeviceAspectRatio","minHeight","maxHeight","minDeviceHeight","maxDeviceHeight","minWidth","minDeviceWidth","maxDeviceWidth","minColor","maxColor","minColorIndex","maxColorIndex","minMonochrome","maxMonochrome","minResolution","maxResolution","mq","toQuery","obj","rules","forEach","k","v","push","realKey","keyVal","join","Context","createContext","undefined","hyphenateKeys","reduce","result","useIsUpdate","ref","useRef","useEffect","current","useQuery","settings","getQuery","makeQuery","setQuery","useState","newQuery","device","onChange","deviceSettings","deviceFromProps","deviceFromContext","useContext","getDevice","setDevice","newDevice","useDevice","Error","getMatchMedia","setMq","isUpdate","newMq","useMatchMedia","setMatches","updateMatches","ev","useMatches"],"sourceRoot":""}